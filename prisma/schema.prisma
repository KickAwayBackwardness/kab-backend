generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categories {
  categorie_id  Int       @id @default(autoincrement())
  category_name String?   @db.VarChar(255)
  created_date  DateTime? @default(now()) @db.DateTime(0)
}

model types {
  type_id      Int       @id @default(autoincrement())
  type_name    String?   @db.VarChar(255)
  created_date DateTime? @default(now()) @db.DateTime(0)
}

model permissions {
  permission_id   Int       @id @default(autoincrement())
  permission_name String    @db.VarChar(50)
  created_date    DateTime? @default(now()) @db.DateTime(0)
  users           users[]
}

model user_status {
  user_status_id Int       @id @default(autoincrement())
  status_name    String    @db.VarChar(50)
  created_date   DateTime? @default(now()) @db.DateTime(0)
  users          users[]
}

model users {
  user_id        Int          @id @default(autoincrement())
  username       String       @unique(map: "username") @db.VarChar(50)
  email          String       @unique(map: "email") @db.VarChar(100)
  password       String       @db.VarChar(255)
  full_name      String?      @db.VarChar(100)
  permission_id  Int          @default(3)
  user_status_id Int?         @default(1)
  created_at     DateTime?    @default(now()) @db.Timestamp(0)
  updated_at     DateTime?    @default(now()) @db.Timestamp(0)
  last_login     DateTime?    @db.Timestamp(0)
  token          String?      @db.VarChar(255)
  token_expiry   DateTime?    @db.Timestamp(0)
  permissions    permissions  @relation(fields: [permission_id], references: [permission_id], onDelete: Cascade, map: "fk_permission")
  user_status    user_status? @relation(fields: [user_status_id], references: [user_status_id], onDelete: Cascade, map: "fk_user_status")

  @@index([permission_id], map: "fk_permission")
  @@index([user_status_id], map: "fk_user_status")
}
